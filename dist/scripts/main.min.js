var ObjectStack=function(){this.object={},this.stack=[]};ObjectStack.prototype.push=function(e,t){this.object[e]=t,this.stack.push(e)},ObjectStack.prototype.pop=function(){var e=this.stack.pop(),t=this.object[e];return delete this.object[e],[e,t]};var Board=React.createClass({displayName:"Board",getInitialState:function(){return{dealerHand:new ObjectStack,playerHand:new ObjectStack}},render:function(){var e=this.props.deck;return temp=e.pop(),this.state.dealerHand.push(temp[0],temp[1]),temp=e.pop(),this.state.dealerHand.push(temp[0],temp[1]),temp=e.pop(),this.state.playerHand.push(temp[0],temp[1]),temp=e.pop(),this.state.playerHand.push(temp[0],temp[1]),React.createElement("div",{className:"board"},React.createElement(Dealer,{hand:this.state.dealerHand}),React.createElement(Player,{hand:this.state.playerHand}))}}),Deck=React.createClass({displayName:"Deck",render:function(){return React.createElement("div",{className:"card",id:"deck"})}}),Dealer=React.createClass({displayName:"Dealer",render:function(){return React.createElement("div",{className:"dealer"},React.createElement(Card,{cards:this.props.hand}))}}),Player=React.createClass({displayName:"Player",render:function(){var e=!0;return React.createElement("div",{className:"player"},React.createElement(Card,{cards:this.props.hand,currentPlayer:e}))}}),Card=React.createClass({displayName:"Card",render:function(){console.log(this.props.cards);for(var e=[],t=0;t<this.props.cards.stack.length;t++){var a,c,r,s,n;r=this.props.cards.stack,s=this.props.cards.object,n=r[t],a=n[0],c=n.slice(1),suitClass="card suit",0!==t||this.props.currentPlayer||(c="",a=""),e.push(React.createElement("div",{className:suitClass},React.createElement("span",{className:"value"},c),React.createElement("span",{className:a}),React.createElement("span",{className:"value inverted"},c)))}return React.createElement("div",{className:"hand"},e)}}),Game=React.createClass({displayName:"Game",getInitialState:function(){return{deck:this.shuffleDeck(this.createDeck())}},createDeck:function(){var e=new ObjectStack,t=["s","d","h","c"];return t.forEach(function(t){for(var a=1;14>a;a++)11==a?e.push(t.concat("J"),10):12===a?e.push(t.concat("Q"),10):13===a?e.push(t.concat("K"),10):1===a?e.push(t.concat("A"),11):e.push(t.concat(a),a)}),e},shuffleDeck:function(e){for(var t=e.stack,a=t.length-1;a>0;a--){var c=Math.floor(Math.random()*(a+1)),r=t[a];t[a]=t[c],t[c]=r}return e},render:function(){return React.createElement("div",{id:"game"},React.createElement(Board,{deck:this.state.deck}))}});React.render(React.createElement(Game,null),document.getElementById("container"));