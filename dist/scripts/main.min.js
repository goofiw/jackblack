var Card=React.createClass({displayName:"Card",render:function(){console.log(this.props.deck);var e=[];for(var a in this.props.deck)if(this.props.deck.hasOwnProperty(a)){var t,c;t=a[0],c=a.slice(1),suitClass="card suit",e.push(React.createElement("div",{className:suitClass},React.createElement("span",{className:"value"},c),React.createElement("span",{className:t}),React.createElement("span",{className:"value inverted"},c)))}return React.createElement("div",null,e)}}),Game=React.createClass({displayName:"Game",getInitialState:function(){return{deck:this.createDeck()}},createDeck:function(){var e={},a=["s","d","h","c"];return a.forEach(function(a){for(var t=1;14>t;t++)11==t?e[a.concat("J")]=t:12===t?e[a.concat("Q")]=t:13===t?e[a.concat("K")]=t:1===t?e[a.concat("A")]=t:e[a.concat(t)]=t}),e},render:function(){return React.createElement("div",{id:"game"},React.createElement("div",null," Testing ",this.state.deck," "),React.createElement(Card,{deck:this.state.deck}))}});React.render(React.createElement(Game,null),document.getElementById("container"));