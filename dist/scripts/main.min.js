var Board=React.createClass({displayName:"Board",getInitialState:function(){return{dealerHand:[],playerHand:[]}},render:function(){var e=this.props.deck;return this.state.dealerHand.concat(e.pop()),this.state.dealerHand.concat(e.pop()),this.state.playerHand.concat(e.pop()),this.state.playerHand.concat(e.pop()),React.createElement("div",{className:"board"},React.createElement(Dealer,{hand:this.state.dealerHand}),React.createElement(Player,{hand:this.state.playerHand}))}}),Dealer=React.createClass({displayName:"Dealer",render:function(){return React.createElement("div",{className:"dealer"},React.createElement(Card,{cards:this.props.hand}))}}),Player=React.createClass({displayName:"Player",render:function(){return React.createElement("div",{className:"player"})}}),Card=React.createClass({displayName:"Card",render:function(){console.log(this.props.cards);var e=[];for(var a in this.props.deck)if(this.props.deck.hasOwnProperty(a)){var t,r;t=a[0],r=a.slice(1),suitClass="card suit",e.push(React.createElement("div",{className:suitClass},React.createElement("span",{className:"value"},r),React.createElement("span",{className:t}),React.createElement("span",{className:"value inverted"},r)))}return React.createElement("div",null,e)}}),Game=React.createClass({displayName:"Game",getInitialState:function(){return{deck:this.createDeck()}},createDeck:function(){var e={},a=["s","d","h","c"];return a.forEach(function(a){for(var t=1;14>t;t++)11==t?e[a.concat("J")]=t:12===t?e[a.concat("Q")]=t:13===t?e[a.concat("K")]=t:1===t?e[a.concat("A")]=t:e[a.concat(t)]=t}),e},render:function(){return React.createElement("div",{id:"game"},React.createElement(Board,{deck:this.state.deck}))}});React.render(React.createElement(Game,null),document.getElementById("container"));